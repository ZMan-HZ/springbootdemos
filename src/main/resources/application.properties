#Server
server.servlet.context-path=/api

#secur 配置
spring.security.user.name=user
spring.security.user.password=123

#配置静态资源路径
#spring.resources.static-locations=classpath:/static

#配置国际化路径
spring.messages.basename=global.home

#配置springmvc的日期格式
spring.mvc.format.date=yyyy-MM-dd
#2.2版本以后需要手动开启
spring.mvc.hiddenmethod.filter.enabled=true


#配置数据源
#spring-boot-starter-jdbc spring-boot-starter-data-jdbc
spring.datasource.username=dzzmdbid
spring.datasource.password=psw@501098
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/orclpdb1
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#JPA 配置
#spring.datasource.initialization-mode=always
#指定sql的路径
#spring.datasource.schema=classpath:sql
#
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#
spring.datasource.initial-size=5
spring.datasource.min-idle=5
spring.datasource.max-active=20
spring.datasource.max-wait=6000
#
spring.datasource.time-between-eviction-runs-millis=60000
#
spring.datasource.min-evictable-idle-time-millis=300000
#spring.datasource.filters=stat
spring.datasource.validation-query=SELECT 1 FROM DUAL
spring.datasource.test-while-idle=true
spring.datasource.test-on-borrow=false
spring.datasource.test-on-return=false
spring.datasource.pool-prepared-statements=true
#
#spring.datasource.proxy-filters.list[0]=stat
#spring.datasource.proxy-filters.list[1]=wall
#spring.datasource.proxy-filters.list[2]=slf4j
spring.datasource.filters=slf4j,stat,wall
spring.datasource.max-open-prepared-statements=20
spring.datasource.max-pool-prepared-statement-per-connection-size=20
spring.datasource.connect-properties.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
#spring.datasource.useGlobalDataSourceStat=true

#配置可代替com.zzm.applications.config.DruidDataSourceConfiguration
#map-underscore-to-camel-case配置驼峰模式，已被mapper中的配置取代
#mybatis.configuration.map-underscore-to-camel-case=true
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
mybatis.config-location=classpath:mybatis/mybatis-config.xml

#JPA的配置类com.zzm.applications.entities.repository.CustomerRepository
#JPA启动时的配置
#spring.jpa.hibernate.ddl-auto=update
#控制台打印sql
spring.jpa.show-sql=true

#以下时配置 Redis
spring.redis.host=localhost
# Redis的database，默认时database0
spring.redis.database=0
# Redis 端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
#  连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
#连接超时时间（毫秒）
spring.redis.timeout=1000



#以下用于配置MQ
spring.activemq.broker-url=tcp://localhost:61616
spring.activemq.user-name=mqmzzid
spring.activemq.password=psw@501098
#spring.activemq.close-timeout=10000
#是否启用连接池
spring.activemq.pool.enabled=true
# 最大连接数
spring.activemq.pool.max-connections=10
#空闲的连接过期时间，默认为30秒
spring.activemq.pool.idle-timeout=30000
#每个connecgtion最大session数
spring.activemq.pool.max-sessions-per-connection=100
#spring.activemq.in-memory=true
#强制的连接过期时间，与idleTimeout的区别在于：idleTimeout是在连接空闲一段时间失效，而expiryTimeout不管当前连接的情况，只要达到指定时间就失效。默认为0，never
spring.activemq.non-blocking-redelivery=false
# 等待消息发送响应的时间。设置为0等待永远。
spring.activemq.send-timeout=0
#是否信任所有包
#spring.activemq.packages.trust-all=true
#要信任的特定包的逗号分隔列表（当不信任所有包时）
spring.activemq.packages.trusted=com.zzm.applications
## 当连接请求和池满时是否阻塞。设置false会抛“JMSException异常”。
spring.activemq.pool.block-if-full=true
# 如果池仍然满，则在抛出异常前阻塞时间。
spring.activemq.pool.block-if-full-timeout=5000
#spring.activemq.pool.create-connection-on-startup=true
#spring.activemq.pool.maximum-active-session-per-connection=500
#spring.activemq.pool.reconnect-on-exception=true
# # 在空闲连接清除线程之间运行的时间。当为负数时，没有空闲连接驱逐线程运行
spring.activemq.pool.time-between-expiration-check=-1
#是否只使用一个MessageProducer
spring.activemq.pool.use-anonymous-producers=true
## 连接过期超时。
spring.activemq.pool.expire-timeout=0
# jms:
#spring.jms.template.receive-timeout=1000
#spring.jms.cache.enabled=true
spring.jms.template.delivery-mode=persistent
#spring.jms.pub-sub-domain=true
#




#**************************************************************
#server.xxx
#配置定制tomcat都是tomcat开头
#server.tomcat.XXXXX
#server.tomcat.uri-encoding=utf-8

#debug=true
#server.port=8080
#person.name=Lisa${random.uuid}
#person.age=${random.int}
#person.birthday=1992/09/17
#person.is-boss=false
#person.maps.k1=v1
#person.maps.k2=v2
#person.list={l1,l2}
#person.dog.nickname=${person.maps.k1}_${random.uuid}
